events {}

http {
    server {
        listen 80;
        #--------------userProfileService----------------

        # POST /users → create-user-service (8000)
        location = /users {
            proxy_pass http://52.200.35.19:8000;
        }

        # GET /users → read-user-service (8001)
        location ~ ^/users$ {
            proxy_pass http://52.200.35.19:8001;
        }

        # GET /users/email/<email> → read-user-service
        location ~ ^/users/email/.* {
            proxy_pass http://52.200.35.19:8001;
        }

        # GET /users/<id> → read-user-service (8001)
        location ~ ^/users/[0-9a-zA-Z\-]+$ {
            limit_except GET {
                deny all;
            }
            proxy_pass http://52.200.35.19:8001;
        }

        # PUT /users/<id> → update-user-service (8002)
        location ~ ^/users/[0-9a-zA-Z\-]+/update$ {
            proxy_pass http://52.200.35.19:8002;
        }

        # DELETE /users/<id> → delete-user-service (8003)
        location ~ ^/users/[0-9a-zA-Z\-]+/delete$ {
            proxy_pass http://52.200.35.19:8003;
        }



        #-----------AuthService----------

        # POST /auth/login → puerto 8004
        location = /auth/login {
            proxy_pass http://52.200.35.19:8004;
        }

        # POST /auth/logout → puerto 8006
        location = /auth/logout {
            proxy_pass http://52.200.35.19:8006;
        }

        # POST /auth/validate-token → puerto 8005
        location = /auth/validate-token {
            proxy_pass http://52.200.35.19:8005;
        }


        # ------- roleService --------

        # POST /roles → crear nuevo rol
        # location = /roles {
        #     proxy_pass http://52.200.35.19:8007;
        # }

        # GET /roles → obtener todos los roles
        # location ~ ^/roles$ {
        #     proxy_pass http://52.200.35.19:8008;
        # }

        # GET /roles/exists/<role_name> → verificar existencia
        # location ~ ^/roles/exists/.* {
        #     proxy_pass http://52.200.35.19:8008;
        # }

        # PUT /roles/<id>
        # location ~ ^/roles/[0-9a-zA-Z\-]+$ {
        #     limit_except PUT {
        #         proxy_pass http://52.200.35.19:8009;
        #     }
        # }

        # DELETE /roles/<id>
        # location ~ ^/roles/[0-9a-zA-Z\-]+$ {
        #     limit_except DELETE {
        #         proxy_pass http://52.200.35.19:8010;
        #     }
        # }



        # ------- sessionService --------

        # POST /session/ → crear sesión
        location = /session/ {
            proxy_pass http://52.200.35.19:8011;
        }

        # GET /session/user/<id-user> → obtener sesión por usuario
        location ~ ^/session/user/[0-9a-zA-Z\-]+$ {
            proxy_pass http://52.200.35.19:8012;
        }

        # PUT /session/<id-session>/end → finalizar sesión
        location ~ ^/session/[0-9a-zA-Z\-]+/end$ {
            proxy_pass http://52.200.35.19:8013;
        }



        # ------- userAuditService --------

        # POST /log → registrar log
        location = /log {
            proxy_pass http://52.200.35.19:8014;
        }

        # GET /logs/<id_log> → obtener log por ID
        location ~ ^/logs/[0-9a-zA-Z\-]+$ {
            proxy_pass http://52.200.35.19:8015;
        }

        # GET /audit/logs → obtener todos los logs
        location = /audit/logs {
            proxy_pass http://52.200.35.19:8015;
        }

    }
}
