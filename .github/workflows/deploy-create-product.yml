name: Deploy createProductService to EC2

on:
  push:
    branches:
      - test2
    paths:
      - 'Backend/product_domain/catalogService/createProduct/**'
  pull_request:
    branches:
      - main
    paths:
      - 'Backend/product_domain/catalogService/createProduct/**'

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd Backend/product_domain/catalogService/createProduct
          npm install

      - name: Run Jest tests
        run: |
          cd Backend/product_domain/catalogService/createProduct
          npm test

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t itsandy/create-product-service:latest ./Backend/product_domain/catalogService/createProduct

      - name: Push Docker image
        run: |
          docker push itsandy/create-product-service:latest

  deploy-qa:
    name: Deploy to QA (test2)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/test2'

    steps:
      - name: Deploy to QA via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PRODUCT_DOMAIN_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRODUCT_DOMAIN_PEM_KEY }}
          script: |
            docker pull itsandy/create-product-service:latest
            docker stop create-product-service || true
            docker rm create-product-service || true
            docker run -d --restart=always --name create-product-service -p 3000:3000 --env-file .env itsandy/create-product-service:latest

  deploy-prod:
    name: Deploy to Production (main)
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Production via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PRODUCT_DOMAIN_PROD_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_PRODUCT_DOMAIN_PEM_KEY }}
          script: |
            docker pull itsandy/create-product-service:latest
            docker stop create-product-service || true
            docker rm create-product-service || true
            docker run -d --restart=always --name create-product-service -p 3000:3000 --env-file .env itsandy/create-product-service:latest
